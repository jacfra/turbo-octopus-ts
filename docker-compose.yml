name: turbo-octopus-ts
version: "3.8"

# for debugging failing builds
# command: tail -F anything

services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_vol:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME_EMAIL}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGPORT: ${DB_PORT}
    ports:
      - "${DB_PORT}:${DB_PORT}" # host:container
    restart: on-failure
  db_admin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${DB_USERNAME_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${DB_PASSWORD}
    ports:
      #pgadmin has to have a container port of 80
      - "${DB_ADMIN_PORT}:80"
    depends_on:
      - db
    volumes:
      - pg_admin_vol:/var/lib/pgadmin
  tots.graphql:
    environment:
      DATABASE_URL: postgresql://${DB_USERNAME_EMAIL}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?schema=public
      BLOCK_FROST_API_KEY: ${BLOCK_FROST_API_KEY}
      REACT_APP_GRAPHQL_PORT: ${REACT_APP_GRAPHQL_PORT}
    restart: always
    build:
      context: ./tots.graphql
      dockerfile: Dockerfile
    command:
      [
        "/app/wait-for-it.sh",
        "db:${DB_PORT}",
        "--",
        "npm",
        "run",
        "deploy"
      ]
    depends_on:
      - db
    ports:
      # host:container
      - "${REACT_APP_GRAPHQL_PORT}:${REACT_APP_GRAPHQL_PORT}"
  tots.react:
    restart: always
    build:
      context: ./tots.react
      dockerfile: Dockerfile
      args:
        REACT_APP_GRAPHQL_PORT: ${REACT_APP_GRAPHQL_PORT}
    depends_on:
      - tots.graphql
    ports:
      # host:container
      - "${REACT_APP_REACT_PORT}:80"

volumes:
  postgres_vol:
  pg_admin_vol:
